{"remainingRequest":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\script\\GZCarBusinessSystem\\web\\src\\views\\chart\\index.vue?vue&type=style&index=0&id=8c5ca292&scoped=true&lang=css&","dependencies":[{"path":"E:\\script\\GZCarBusinessSystem\\web\\src\\views\\chart\\index.vue","mtime":1617115422428},{"path":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKKiB7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7CiAgbGlzdC1zdHlsZTogbm9uZTsKfQoKLmVsLXJvdyB7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLmVsLWNvbCB7CiAgYm9yZGVyLXJhZGl1czogNHB4Owp9CgouYmctcHVycGxlLWRhcmsgewogIGJhY2tncm91bmQ6ICM5OWE5YmY7Cn0KCi5iZy1wdXJwbGUgewogIGJhY2tncm91bmQ6ICNkM2RjZTY7Cn0KCi5iZy1wdXJwbGUtbGlnaHQgewogIGJhY2tncm91bmQ6ICNlNWU5ZjI7Cn0KCi5ncmlkLWNvbnRlbnQgewogIGJvcmRlci1yYWRpdXM6IDRweDsKICBtaW4taGVpZ2h0OiAzNnB4Owp9Cgoucm93LWJnIHsKICBwYWRkaW5nOiAxMHB4IDA7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZmFmYzsKfQoK"},{"version":3,"sources":["index.vue"],"names":[],"mappingsvBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/chart","sourcesContent":["<template>\n  <!--为echarts准备一个具备大小的容器dom-->\n  <div style=\"margin: 10px\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>车辆总数(辆)</span>\n          </div>\n          <div class=\"text item\">\n            {{ totalCars }}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>自动挡数量(辆)</span>\n          </div>\n          <div class=\"text item\">\n            {{ totalAutomaticCars }}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>手动挡数量(辆)</span>\n          </div>\n          <div class=\"text item\">\n            {{ totalManualCars }}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>交易总额(万)</span>\n          </div>\n          <div class=\"text item\">\n            {{ totalPrice }}\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div id=\"main1\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"main2\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div id=\"main3\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"main4\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div id=\"main6\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"main7\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div id=\"main8\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"main9\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n    </el-row>\n    <el-row>\n      <div id=\"main5\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n    </el-row>\n  </div>\n\n</template>\n<script>\n// eslint-disable-next-line no-unused-vars\nimport {\n  getGeneralData,\n  getNationalStandardData,\n  getPriceData,\n  getRegistrationAreaData,\n  getVendorData,\n  getCityData,\n  getMileagePriceData,\n  getAgePriceData,\n  getAgeData,\n  getVendorAveragePriceData\n} from '@/api/gzcar'\n\nexport default {\n  name: '',\n  data() {\n    return {\n      charts: '',\n      totalCars: 0,\n      totalPrice: 0,\n      totalAutomaticCars: 0,\n      totalManualCars: 0,\n      registrationAreas: [],\n      registrationAreasCars: [],\n      priceAreaCars: [],\n      vendors: [],\n      vendorsCars: [],\n      nationalStandardCars: [],\n      ageCars: [],\n      cityCars: [],\n      cityCarAge: [],\n      cityCarMileage: [],\n      cityCarPrice: [],\n      mileagePrice: [],\n      agePrice: [],\n      vendors2: [],\n      vendorAveragePriceCars: []\n    }\n  },\n  // 调用\n  mounted() {\n    this.$nextTick(function () {\n      // this.drawPie('main1')\n      this.loadGeneralData()\n      this.loadRegistrationAreaData()\n      this.loadPriceData()\n      this.loadVendorData()\n      this.loadNationalStandardData()\n      this.loadCityData()\n      this.loadMileagePriceData()\n      this.loadAgePriceData()\n      this.loadAgeData()\n      this.loadVendorAveragePriceData()\n    })\n  },\n  methods: {\n    async loadGeneralData() {\n      const response = await getGeneralData()\n      const data = response.data\n      this.totalCars = data.total\n      this.totalAutomaticCars = data.automatic\n      this.totalManualCars = data.manual\n      this.totalPrice = data.total_price.price__sum\n    },\n    async loadRegistrationAreaData() {\n      const response = await getRegistrationAreaData()\n      const data = response.data\n      for (const d of data) {\n        this.registrationAreas.push(d.registration_area)\n        this.registrationAreasCars.push(d.count)\n      }\n      this.drawRegistrationAreaStatistics('main1')\n    },\n    async loadPriceData() {\n      const response = await getPriceData()\n      const data = response.data\n      this.priceAreaCars = data\n      this.drawPriceStatistics('main2')\n    },\n    async loadVendorData() {\n      const response = await getVendorData()\n      const data = response.data\n      for (const d of data) {\n        this.vendors.push(d.vendor)\n        this.vendorsCars.push(d.count)\n      }\n      this.drawVendorStatistics('main3')\n    },\n    async loadNationalStandardData() {\n      const response = await getNationalStandardData()\n      const data = response.data\n      this.nationalStandardCars = data\n      this.drawNationalStandardStatistics('main4')\n    },\n    async loadAgeData() {\n      const response = await getAgeData()\n      const data = response.data\n      this.ageCars = data\n      this.drawAgeStatistics('main7')\n    },\n    async loadVendorAveragePriceData() {\n      const response = await getVendorAveragePriceData()\n      const data = response.data\n      for (const d of data) {\n        this.vendors2.push(d.vendor)\n        this.vendorAveragePriceCars.push(d.avg_price)\n      }\n      this.drawVendorAveragePriceStatistics('main9')\n    },\n    async loadCityData() {\n      const response = await getCityData('北京')\n      const data = response.data\n      this.nationalStandardCars = data\n      console.log(data)\n      for (const d of data) {\n        this.cityCars.push(d.car.title)\n        this.cityCarMileage.push(d.car.mileage)\n        this.cityCarAge.push(d.car.age)\n        this.cityCarPrice.push(d.car.price)\n      }\n      this.drawCityCars('main5')\n    },\n    async loadMileagePriceData() {\n      const response = await getMileagePriceData('北京')\n      const data = response.data\n      this.mileagePrice = data\n      console.log(data)\n      this.drawMileagePriceStatistics('main6')\n    },\n    async loadAgePriceData() {\n      const response = await getAgePriceData('北京')\n      const data = response.data\n      this.agePrice = data\n      console.log(data)\n      this.drawAgePriceStatistics('main8')\n    },\n    drawVendorStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          title: {\n            text: '各厂商车辆分布',\n            subtext: '--',\n            left: 'center'\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: this.vendors,\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value'\n            }\n          ],\n          series: [\n            {\n              name: '车辆数量',\n              type: 'bar',\n              barWidth: '60%',\n              data: this.vendorsCars,\n              itemStyle: {\n                normal: {\n                  color: '#10cee0'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawRegistrationAreaStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          title: {\n            text: '各城市车辆分布',\n            subtext: '--',\n            left: 'center'\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: this.registrationAreas,\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value'\n            }\n          ],\n          series: [\n            {\n              name: '车辆数量',\n              type: 'bar',\n              barWidth: '60%',\n              data: this.registrationAreasCars,\n              itemStyle: {\n                normal: {\n                  color: '#3991dc'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawPriceStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '价格区间占比',\n            subtext: '--',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left'\n          },\n          series: [\n            {\n              name: '车辆数量',\n              type: 'pie',\n              radius: '50%',\n              data: this.priceAreaCars,\n              emphasis: {\n                itemStyle: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawNationalStandardStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '排气国标占比',\n            subtext: '--',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left'\n          },\n          series: [\n            {\n              name: '车辆数量',\n              type: 'pie',\n              radius: '50%',\n              data: this.nationalStandardCars,\n              emphasis: {\n                itemStyle: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawAgeStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '车龄车龄占比',\n            subtext: '--',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left'\n          },\n          series: [\n            {\n              name: '车辆数量',\n              type: 'pie',\n              radius: '50%',\n              data: this.ageCars,\n              emphasis: {\n                itemStyle: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawVendorAveragePriceStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          title: {\n            text: '各厂商车辆平均价格分布',\n            subtext: '--',\n            left: 'center'\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: this.vendors2,\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value'\n            }\n          ],\n          series: [\n            {\n              name: '车辆数量',\n              type: 'bar',\n              barWidth: '60%',\n              data: this.vendorAveragePriceCars,\n              itemStyle: {\n                normal: {\n                  color: '#10cee0'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawCityCars(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '所在城市车辆详细数据'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['价格(万)', '里程（万公里）', '年份（年）']\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          toolbox: {\n            feature: {\n              saveAsImage: {}\n            }\n          },\n          xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            data: this.cityCars\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              name: '价格',\n              type: 'line',\n              stack: '总量',\n              data: this.cityCarPrice\n            },\n            {\n              name: '里程',\n              type: 'line',\n              stack: '总量',\n              data: this.cityCarMileage\n            },\n            {\n              name: '年份',\n              type: 'line',\n              stack: '总量',\n              data: this.cityCarAge\n            }\n          ]\n        }\n      )\n    },\n    drawMileagePriceStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '车辆里程价格分布',\n          },\n          grid: {\n            left: '3%',\n            right: '7%',\n            bottom: '7%',\n            containLabel: true\n          },\n          tooltip: {\n            // trigger: 'axis',\n            showDelay: 0,\n            formatter: function(params) {\n              if (params.value.length > 1) {\n                return params.seriesName + ' :<br/>' + params.value[0] + '万公里 ' + params.value[1] + '万元 '\n              } else {\n                return params.seriesName + ' :<br/>' + params.name + ' : ' + params.value + '万元 '\n              }\n            },\n            axisPointer: {\n              show: true,\n              type: 'cross',\n              lineStyle: {\n                type: 'dashed',\n                width: 1\n              }\n            }\n          },\n          toolbox: {\n            feature: {\n              dataZoom: {},\n              brush: {\n                type: ['rect', 'polygon', 'clear']\n              }\n            }\n          },\n          brush: {\n          },\n          legend: {\n            data: ['里程', '价格'],\n            left: 'center',\n            bottom: 10\n          },\n          xAxis: [\n            {\n              type: 'value',\n              scale: true,\n              axisLabel: {\n                formatter: '{value} 万公里'\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value',\n              scale: true,\n              axisLabel: {\n                formatter: '{value} 万元'\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '里程-价格',\n              type: 'scatter',\n              emphasis: {\n                focus: 'series'\n              },\n              data: this.mileagePrice,\n              markArea: {\n                silent: true,\n                itemStyle: {\n                  color: 'transparent',\n                  borderWidth: 1,\n                  borderType: 'dashed'\n                },\n                data: [[{\n                  name: '里程价格',\n                  xAxis: 'min',\n                  yAxis: 'min'\n                }, {\n                  xAxis: 'max',\n                  yAxis: 'max'\n                }]]\n              },\n              markPoint: {\n                data: [\n                  {type: 'max', name: 'Max'},\n                  {type: 'min', name: 'Min'}\n                ]\n              },\n              markLine: {\n                lineStyle: {\n                  type: 'solid'\n                },\n                data: [\n                  {type: 'average', name: '平均值'},\n                  { xAxis: 160 }\n                ]\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawAgePriceStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '车辆车龄价格分布'\n          },\n          grid: {\n            left: '3%',\n            right: '7%',\n            bottom: '7%',\n            containLabel: true\n          },\n          tooltip: {\n            // trigger: 'axis',\n            showDelay: 0,\n            formatter: function(params) {\n              if (params.value.length > 1) {\n                return params.seriesName + ' :<br/>' + params.value[0] + '年 ' + params.value[1] + '万元 '\n              } else {\n                return params.seriesName + ' :<br/>' + params.name + ' : ' + params.value + '万元 '\n              }\n            },\n            axisPointer: {\n              show: true,\n              type: 'cross',\n              lineStyle: {\n                type: 'dashed',\n                width: 1\n              }\n            }\n          },\n          toolbox: {\n            feature: {\n              dataZoom: {},\n              brush: {\n                type: ['rect', 'polygon', 'clear']\n              }\n            }\n          },\n          brush: {\n          },\n          legend: {\n            data: ['车辆', '价格'],\n            left: 'center',\n            bottom: 10\n          },\n          xAxis: [\n            {\n              type: 'value',\n              scale: true,\n              axisLabel: {\n                formatter: '{value} 年'\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value',\n              scale: true,\n              axisLabel: {\n                formatter: '{value} 万元'\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '车龄-价格',\n              type: 'scatter',\n              emphasis: {\n                focus: 'series'\n              },\n              data: this.agePrice,\n              markArea: {\n                silent: true,\n                itemStyle: {\n                  color: 'transparent',\n                  borderWidth: 1,\n                  borderType: 'dashed'\n                },\n                data: [[{\n                  name: '',\n                  xAxis: 'min',\n                  yAxis: 'min'\n                }, {\n                  xAxis: 'max',\n                  yAxis: 'max'\n                }]]\n              },\n              markPoint: {\n                data: [\n                  {type: 'max', name: 'Max'},\n                  {type: 'min', name: 'Min'}\n                ]\n              },\n              markLine: {\n                lineStyle: {\n                  type: 'solid'\n                },\n                data: [\n                  {type: 'average', name: '平均值'},\n                  { xAxis: 160 }\n                ]\n              }\n            }\n          ]\n        }\n      )\n    },\n  }\n}\n</script>\n<style scoped>\n* {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n.el-row {\n  margin-bottom: 20px;\n}\n\n.el-col {\n  border-radius: 4px;\n}\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n</style>\n"]}]}