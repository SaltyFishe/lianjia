{"remainingRequest":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\script\\GZCarBusinessSystem\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\script\\GZCarBusinessSystem\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\script\\GZCarBusinessSystem\\web\\src\\views\\chart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\script\\GZCarBusinessSystem\\web\\src\\views\\chart\\index.vue","mtime":1617115422428},{"path":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\script\\GZCarBusinessSystem\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!--为echarts准备一个具备大小的容器dom-->\n  <div style=\"margin: 10px\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>车辆总数(辆)</span>\n          </div>\n          <div class=\"text item\">\n            {{ totalCars }}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>自动挡数量(辆)</span>\n          </div>\n          <div class=\"text item\">\n            {{ totalAutomaticCars }}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>手动挡数量(辆)</span>\n          </div>\n          <div class=\"text item\">\n            {{ totalManualCars }}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card class=\"box-card\" shadow=\"hover\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>交易总额(万)</span>\n          </div>\n          <div class=\"text item\">\n            {{ totalPrice }}\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div id=\"main1\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"main2\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div id=\"main3\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"main4\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div id=\"main6\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"main7\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <div id=\"main8\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n      <el-col :span=\"12\">\n        <div id=\"main9\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n      </el-col>\n    </el-row>\n    <el-row>\n      <div id=\"main5\" style=\"height: 400px;\" class=\"grid-content bg-purple\"/>\n    </el-row>\n  </div>\n\n</template>\n<script>\n// eslint-disable-next-line no-unused-vars\nimport {\n  getGeneralData,\n  getNationalStandardData,\n  getPriceData,\n  getRegistrationAreaData,\n  getVendorData,\n  getCityData,\n  getMileagePriceData,\n  getAgePriceData,\n  getAgeData,\n  getVendorAveragePriceData\n} from '@/api/gzcar'\n\nexport default {\n  name: '',\n  data() {\n    return {\n      charts: '',\n      totalCars: 0,\n      totalPrice: 0,\n      totalAutomaticCars: 0,\n      totalManualCars: 0,\n      registrationAreas: [],\n      registrationAreasCars: [],\n      priceAreaCars: [],\n      vendors: [],\n      vendorsCars: [],\n      nationalStandardCars: [],\n      ageCars: [],\n      cityCars: [],\n      cityCarAge: [],\n      cityCarMileage: [],\n      cityCarPrice: [],\n      mileagePrice: [],\n      agePrice: [],\n      vendors2: [],\n      vendorAveragePriceCars: []\n    }\n  },\n  // 调用\n  mounted() {\n    this.$nextTick(function () {\n      // this.drawPie('main1')\n      this.loadGeneralData()\n      this.loadRegistrationAreaData()\n      this.loadPriceData()\n      this.loadVendorData()\n      this.loadNationalStandardData()\n      this.loadCityData()\n      this.loadMileagePriceData()\n      this.loadAgePriceData()\n      this.loadAgeData()\n      this.loadVendorAveragePriceData()\n    })\n  },\n  methods: {\n    async loadGeneralData() {\n      const response = await getGeneralData()\n      const data = response.data\n      this.totalCars = data.total\n      this.totalAutomaticCars = data.automatic\n      this.totalManualCars = data.manual\n      this.totalPrice = data.total_price.price__sum\n    },\n    async loadRegistrationAreaData() {\n      const response = await getRegistrationAreaData()\n      const data = response.data\n      for (const d of data) {\n        this.registrationAreas.push(d.registration_area)\n        this.registrationAreasCars.push(d.count)\n      }\n      this.drawRegistrationAreaStatistics('main1')\n    },\n    async loadPriceData() {\n      const response = await getPriceData()\n      const data = response.data\n      this.priceAreaCars = data\n      this.drawPriceStatistics('main2')\n    },\n    async loadVendorData() {\n      const response = await getVendorData()\n      const data = response.data\n      for (const d of data) {\n        this.vendors.push(d.vendor)\n        this.vendorsCars.push(d.count)\n      }\n      this.drawVendorStatistics('main3')\n    },\n    async loadNationalStandardData() {\n      const response = await getNationalStandardData()\n      const data = response.data\n      this.nationalStandardCars = data\n      this.drawNationalStandardStatistics('main4')\n    },\n    async loadAgeData() {\n      const response = await getAgeData()\n      const data = response.data\n      this.ageCars = data\n      this.drawAgeStatistics('main7')\n    },\n    async loadVendorAveragePriceData() {\n      const response = await getVendorAveragePriceData()\n      const data = response.data\n      for (const d of data) {\n        this.vendors2.push(d.vendor)\n        this.vendorAveragePriceCars.push(d.avg_price)\n      }\n      this.drawVendorAveragePriceStatistics('main9')\n    },\n    async loadCityData() {\n      const response = await getCityData('北京')\n      const data = response.data\n      this.nationalStandardCars = data\n      console.log(data)\n      for (const d of data) {\n        this.cityCars.push(d.car.title)\n        this.cityCarMileage.push(d.car.mileage)\n        this.cityCarAge.push(d.car.age)\n        this.cityCarPrice.push(d.car.price)\n      }\n      this.drawCityCars('main5')\n    },\n    async loadMileagePriceData() {\n      const response = await getMileagePriceData('北京')\n      const data = response.data\n      this.mileagePrice = data\n      console.log(data)\n      this.drawMileagePriceStatistics('main6')\n    },\n    async loadAgePriceData() {\n      const response = await getAgePriceData('北京')\n      const data = response.data\n      this.agePrice = data\n      console.log(data)\n      this.drawAgePriceStatistics('main8')\n    },\n    drawVendorStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          title: {\n            text: '各厂商车辆分布',\n            subtext: '--',\n            left: 'center'\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: this.vendors,\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value'\n            }\n          ],\n          series: [\n            {\n              name: '车辆数量',\n              type: 'bar',\n              barWidth: '60%',\n              data: this.vendorsCars,\n              itemStyle: {\n                normal: {\n                  color: '#10cee0'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawRegistrationAreaStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          title: {\n            text: '各城市车辆分布',\n            subtext: '--',\n            left: 'center'\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: this.registrationAreas,\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value'\n            }\n          ],\n          series: [\n            {\n              name: '车辆数量',\n              type: 'bar',\n              barWidth: '60%',\n              data: this.registrationAreasCars,\n              itemStyle: {\n                normal: {\n                  color: '#3991dc'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawPriceStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '价格区间占比',\n            subtext: '--',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left'\n          },\n          series: [\n            {\n              name: '车辆数量',\n              type: 'pie',\n              radius: '50%',\n              data: this.priceAreaCars,\n              emphasis: {\n                itemStyle: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawNationalStandardStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '排气国标占比',\n            subtext: '--',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left'\n          },\n          series: [\n            {\n              name: '车辆数量',\n              type: 'pie',\n              radius: '50%',\n              data: this.nationalStandardCars,\n              emphasis: {\n                itemStyle: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawAgeStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '车龄车龄占比',\n            subtext: '--',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left'\n          },\n          series: [\n            {\n              name: '车辆数量',\n              type: 'pie',\n              radius: '50%',\n              data: this.ageCars,\n              emphasis: {\n                itemStyle: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawVendorAveragePriceStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          title: {\n            text: '各厂商车辆平均价格分布',\n            subtext: '--',\n            left: 'center'\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: this.vendors2,\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value'\n            }\n          ],\n          series: [\n            {\n              name: '车辆数量',\n              type: 'bar',\n              barWidth: '60%',\n              data: this.vendorAveragePriceCars,\n              itemStyle: {\n                normal: {\n                  color: '#10cee0'\n                }\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawCityCars(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '所在城市车辆详细数据'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['价格(万)', '里程（万公里）', '年份（年）']\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          toolbox: {\n            feature: {\n              saveAsImage: {}\n            }\n          },\n          xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            data: this.cityCars\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              name: '价格',\n              type: 'line',\n              stack: '总量',\n              data: this.cityCarPrice\n            },\n            {\n              name: '里程',\n              type: 'line',\n              stack: '总量',\n              data: this.cityCarMileage\n            },\n            {\n              name: '年份',\n              type: 'line',\n              stack: '总量',\n              data: this.cityCarAge\n            }\n          ]\n        }\n      )\n    },\n    drawMileagePriceStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '车辆里程价格分布',\n          },\n          grid: {\n            left: '3%',\n            right: '7%',\n            bottom: '7%',\n            containLabel: true\n          },\n          tooltip: {\n            // trigger: 'axis',\n            showDelay: 0,\n            formatter: function(params) {\n              if (params.value.length > 1) {\n                return params.seriesName + ' :<br/>' + params.value[0] + '万公里 ' + params.value[1] + '万元 '\n              } else {\n                return params.seriesName + ' :<br/>' + params.name + ' : ' + params.value + '万元 '\n              }\n            },\n            axisPointer: {\n              show: true,\n              type: 'cross',\n              lineStyle: {\n                type: 'dashed',\n                width: 1\n              }\n            }\n          },\n          toolbox: {\n            feature: {\n              dataZoom: {},\n              brush: {\n                type: ['rect', 'polygon', 'clear']\n              }\n            }\n          },\n          brush: {\n          },\n          legend: {\n            data: ['里程', '价格'],\n            left: 'center',\n            bottom: 10\n          },\n          xAxis: [\n            {\n              type: 'value',\n              scale: true,\n              axisLabel: {\n                formatter: '{value} 万公里'\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value',\n              scale: true,\n              axisLabel: {\n                formatter: '{value} 万元'\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '里程-价格',\n              type: 'scatter',\n              emphasis: {\n                focus: 'series'\n              },\n              data: this.mileagePrice,\n              markArea: {\n                silent: true,\n                itemStyle: {\n                  color: 'transparent',\n                  borderWidth: 1,\n                  borderType: 'dashed'\n                },\n                data: [[{\n                  name: '里程价格',\n                  xAxis: 'min',\n                  yAxis: 'min'\n                }, {\n                  xAxis: 'max',\n                  yAxis: 'max'\n                }]]\n              },\n              markPoint: {\n                data: [\n                  {type: 'max', name: 'Max'},\n                  {type: 'min', name: 'Min'}\n                ]\n              },\n              markLine: {\n                lineStyle: {\n                  type: 'solid'\n                },\n                data: [\n                  {type: 'average', name: '平均值'},\n                  { xAxis: 160 }\n                ]\n              }\n            }\n          ]\n        }\n      )\n    },\n    drawAgePriceStatistics(id) {\n      this.charts = this.$echarts.init(document.getElementById(id))\n      this.charts.setOption(\n        {\n          title: {\n            text: '车辆车龄价格分布'\n          },\n          grid: {\n            left: '3%',\n            right: '7%',\n            bottom: '7%',\n            containLabel: true\n          },\n          tooltip: {\n            // trigger: 'axis',\n            showDelay: 0,\n            formatter: function(params) {\n              if (params.value.length > 1) {\n                return params.seriesName + ' :<br/>' + params.value[0] + '年 ' + params.value[1] + '万元 '\n              } else {\n                return params.seriesName + ' :<br/>' + params.name + ' : ' + params.value + '万元 '\n              }\n            },\n            axisPointer: {\n              show: true,\n              type: 'cross',\n              lineStyle: {\n                type: 'dashed',\n                width: 1\n              }\n            }\n          },\n          toolbox: {\n            feature: {\n              dataZoom: {},\n              brush: {\n                type: ['rect', 'polygon', 'clear']\n              }\n            }\n          },\n          brush: {\n          },\n          legend: {\n            data: ['车辆', '价格'],\n            left: 'center',\n            bottom: 10\n          },\n          xAxis: [\n            {\n              type: 'value',\n              scale: true,\n              axisLabel: {\n                formatter: '{value} 年'\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value',\n              scale: true,\n              axisLabel: {\n                formatter: '{value} 万元'\n              },\n              splitLine: {\n                show: false\n              }\n            }\n          ],\n          series: [\n            {\n              name: '车龄-价格',\n              type: 'scatter',\n              emphasis: {\n                focus: 'series'\n              },\n              data: this.agePrice,\n              markArea: {\n                silent: true,\n                itemStyle: {\n                  color: 'transparent',\n                  borderWidth: 1,\n                  borderType: 'dashed'\n                },\n                data: [[{\n                  name: '',\n                  xAxis: 'min',\n                  yAxis: 'min'\n                }, {\n                  xAxis: 'max',\n                  yAxis: 'max'\n                }]]\n              },\n              markPoint: {\n                data: [\n                  {type: 'max', name: 'Max'},\n                  {type: 'min', name: 'Min'}\n                ]\n              },\n              markLine: {\n                lineStyle: {\n                  type: 'solid'\n                },\n                data: [\n                  {type: 'average', name: '平均值'},\n                  { xAxis: 160 }\n                ]\n              }\n            }\n          ]\n        }\n      )\n    },\n  }\n}\n</script>\n<style scoped>\n* {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n.el-row {\n  margin-bottom: 20px;\n}\n\n.el-col {\n  border-radius: 4px;\n}\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n</style>\n"],"sourceRoot":"src/views/chart"}]}